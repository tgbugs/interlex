#!/usr/bin/env bash
# interlex-dbsetup [PORT] [DATABASE]

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve all symlinks
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # resolve relative symlinks
done
ABS_PATH="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

SQL="${ABS_PATH}/../sql/"
RESOURCES="${ABS_PATH}/../resources/"

if [ -z $1 ]; then
    PORT=5432
else
    PORT=$1
fi

if [ -z $2 ]; then
    DATABASE=$(python -c 'from interlex.config import auth; print(auth.get("test-database"))')
else
    DATABASE=$2
fi

# postgres setup (these need to fail loudly)
psql -U postgres -h localhost -p $PORT -d postgres  -f "${SQL}/postgres.sql" -v database=$DATABASE &&
psql -U postgres -h localhost -p $PORT -d $DATABASE -f "${SQL}/extensions.sql" &&

# interlex-admin setup
psql -U interlex-admin -h localhost -p $PORT -d $DATABASE -f "${SQL}/schemas.sql" &&
psql -U interlex-admin -h localhost -p $PORT -d $DATABASE -f "${SQL}/groups.sql" &&
psql -U interlex-admin -h localhost -p $PORT -d $DATABASE -f "${SQL}/triples.sql" &&
psql -U interlex-admin -h localhost -p $PORT -d $DATABASE -f "${SQL}/user-uris.sql" &&
psql -U interlex-admin -h localhost -p $PORT -d $DATABASE -f "${SQL}/inserts.sql" -v resources=${RESOURCES}  &&
psql -U interlex-admin -h localhost -p $PORT -d $DATABASE -f "${SQL}/permissions.sql" -v database=$DATABASE

# tests
export DBSETUPTEST=1
export INTERLEX_TEST_DATABASE=${DATABASE}
echo running python tests 
cd ${ABS_PATH}/../
pytest test/test_constraints.py
unset DBSETUPTEST
unset INTERLEX_TEST_DATABASE
